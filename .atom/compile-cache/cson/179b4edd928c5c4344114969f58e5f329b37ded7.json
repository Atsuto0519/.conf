{".source.julia":{"Documented function":{"prefix":"fxd","body":"@doc doc\"\"\"\n$1($2)\n$3\n\"\"\" ->\nfunction $1($2)\n\t$4\nend"},"Ternary operator":{"prefix":"3","body":"${1:condition} ? ${2:if_true} : ${3:if_false}"},"Else if":{"prefix":"elseif","body":"elseif ${1:condition}\n$2"},"Else if2":{"prefix":"elif","body":"elseif ${1:condition}\n$2"},"error":{"prefix":"err","body":"error(\"$1\")"},"finally":{"prefix":"fn","body":"finally\n\t$1"},"for/in":{"prefix":"fr","body":"for ${1:variable} in ${2:iterator}\n\t$3\nend"},"function":{"prefix":"fx","body":"function ${1:name}(${2:args})\n\t${3:body}\nend"},"return":{"prefix":"ret","body":"return $1"},"if":{"prefix":"if","body":"if ${1:condition}\n\t${2:body}\nend"},"if/else":{"prefix":"ie","body":"if ${1:condition}\n\t${2:true_body}\nelse\n\t${3:false_body}\nend"},"macro":{"prefix":"mcr","body":"macro ${1:name}(${2:args})\n\t${3:body}\nend"},"println":{"prefix":"p","body":"println(${1:msg})"},"throw":{"prefix":"th","body":"throw(${1:err_type}Error(${2:msg}))"},"try/catch":{"prefix":"tr","body":"try\n\t${1:try_block}\ncatch $1\n\t$2\nend"},"type":{"prefix":"t","body":"type ${1:name}\n\t${1:fields}\nend"},"while":{"prefix":"wh","body":"while ${1:condition}\n\t${2:body}\nend"},"Compound expression":{"prefix":"beg","body":"${1:variable} = begin\n  $2\nend"},"let block":{"prefix":"let","body":"${1:variable} = let\n  $2\nend"}}}