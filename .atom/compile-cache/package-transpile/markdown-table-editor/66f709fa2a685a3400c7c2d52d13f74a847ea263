"use strict";

var _controller = require("./controller.js");

var _controller2 = _interopRequireDefault(_controller);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const NAMESPACE = "markdown-table-editor";

class MarkdownTableEditor {
  constructor() {
    this.controller = null;
  }

  activate() {
    this.controller = new _controller2.default();
    // migrate old configurations
    const grammars = atom.config.get(`${NAMESPACE}.grammars`);
    if (grammars !== undefined) {
      atom.config.set(`${NAMESPACE}.scopes`, grammars);
      atom.config.unset(`${NAMESPACE}.grammars`);
    }
    const minimumContentWidth = atom.config.get(`${NAMESPACE}.minimumContentWidth`);
    if (minimumContentWidth !== undefined) {
      atom.config.set(`${NAMESPACE}.minDelimiterWidth`, minimumContentWidth);
      atom.config.unset(`${NAMESPACE}.minimumContentWidth`);
    }
    const eawAmbiguousAsWide = atom.config.get(`${NAMESPACE}.eawAmbiguousAsWide`);
    if (eawAmbiguousAsWide !== undefined) {
      atom.config.set(`${NAMESPACE}.ambiguousAsWide`, eawAmbiguousAsWide);
      atom.config.unset(`${NAMESPACE}.eawAmbiguousAsWide`);
    }
    const alwaysWideChars = atom.config.get(`${NAMESPACE}.alwaysWideChars`);
    if (alwaysWideChars !== undefined) {
      atom.config.set(`${NAMESPACE}.wideChars`, alwaysWideChars);
      atom.config.unset(`${NAMESPACE}.alwaysWideChars`);
    }
    const alwaysNarrowChars = atom.config.get(`${NAMESPACE}.alwaysNarrowChars`);
    if (alwaysNarrowChars !== undefined) {
      atom.config.set(`${NAMESPACE}.narrowChars`, alwaysNarrowChars);
      atom.config.unset(`${NAMESPACE}.alwaysNarrowChars`);
    }
  }

  deactivate() {
    this.controller.destroy();
  }

  serialize() {}
}

module.exports = new MarkdownTableEditor();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcmtkb3duLXRhYmxlLWVkaXRvci5qcyJdLCJuYW1lcyI6WyJOQU1FU1BBQ0UiLCJNYXJrZG93blRhYmxlRWRpdG9yIiwiY29uc3RydWN0b3IiLCJjb250cm9sbGVyIiwiYWN0aXZhdGUiLCJDb250cm9sbGVyIiwiZ3JhbW1hcnMiLCJhdG9tIiwiY29uZmlnIiwiZ2V0IiwidW5kZWZpbmVkIiwic2V0IiwidW5zZXQiLCJtaW5pbXVtQ29udGVudFdpZHRoIiwiZWF3QW1iaWd1b3VzQXNXaWRlIiwiYWx3YXlzV2lkZUNoYXJzIiwiYWx3YXlzTmFycm93Q2hhcnMiLCJkZWFjdGl2YXRlIiwiZGVzdHJveSIsInNlcmlhbGl6ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUVBLE1BQU1BLFlBQVksdUJBQWxCOztBQUVBLE1BQU1DLG1CQUFOLENBQTBCO0FBQ3hCQyxnQkFBYztBQUNaLFNBQUtDLFVBQUwsR0FBa0IsSUFBbEI7QUFDRDs7QUFFREMsYUFBVztBQUNULFNBQUtELFVBQUwsR0FBa0IsSUFBSUUsb0JBQUosRUFBbEI7QUFDQTtBQUNBLFVBQU1DLFdBQVdDLEtBQUtDLE1BQUwsQ0FBWUMsR0FBWixDQUFpQixHQUFFVCxTQUFVLFdBQTdCLENBQWpCO0FBQ0EsUUFBSU0sYUFBYUksU0FBakIsRUFBNEI7QUFDMUJILFdBQUtDLE1BQUwsQ0FBWUcsR0FBWixDQUFpQixHQUFFWCxTQUFVLFNBQTdCLEVBQXVDTSxRQUF2QztBQUNBQyxXQUFLQyxNQUFMLENBQVlJLEtBQVosQ0FBbUIsR0FBRVosU0FBVSxXQUEvQjtBQUNEO0FBQ0QsVUFBTWEsc0JBQXNCTixLQUFLQyxNQUFMLENBQVlDLEdBQVosQ0FBaUIsR0FBRVQsU0FBVSxzQkFBN0IsQ0FBNUI7QUFDQSxRQUFJYSx3QkFBd0JILFNBQTVCLEVBQXVDO0FBQ3JDSCxXQUFLQyxNQUFMLENBQVlHLEdBQVosQ0FBaUIsR0FBRVgsU0FBVSxvQkFBN0IsRUFBa0RhLG1CQUFsRDtBQUNBTixXQUFLQyxNQUFMLENBQVlJLEtBQVosQ0FBbUIsR0FBRVosU0FBVSxzQkFBL0I7QUFDRDtBQUNELFVBQU1jLHFCQUFxQlAsS0FBS0MsTUFBTCxDQUFZQyxHQUFaLENBQWlCLEdBQUVULFNBQVUscUJBQTdCLENBQTNCO0FBQ0EsUUFBSWMsdUJBQXVCSixTQUEzQixFQUFzQztBQUNwQ0gsV0FBS0MsTUFBTCxDQUFZRyxHQUFaLENBQWlCLEdBQUVYLFNBQVUsa0JBQTdCLEVBQWdEYyxrQkFBaEQ7QUFDQVAsV0FBS0MsTUFBTCxDQUFZSSxLQUFaLENBQW1CLEdBQUVaLFNBQVUscUJBQS9CO0FBQ0Q7QUFDRCxVQUFNZSxrQkFBa0JSLEtBQUtDLE1BQUwsQ0FBWUMsR0FBWixDQUFpQixHQUFFVCxTQUFVLGtCQUE3QixDQUF4QjtBQUNBLFFBQUllLG9CQUFvQkwsU0FBeEIsRUFBbUM7QUFDakNILFdBQUtDLE1BQUwsQ0FBWUcsR0FBWixDQUFpQixHQUFFWCxTQUFVLFlBQTdCLEVBQTBDZSxlQUExQztBQUNBUixXQUFLQyxNQUFMLENBQVlJLEtBQVosQ0FBbUIsR0FBRVosU0FBVSxrQkFBL0I7QUFDRDtBQUNELFVBQU1nQixvQkFBb0JULEtBQUtDLE1BQUwsQ0FBWUMsR0FBWixDQUFpQixHQUFFVCxTQUFVLG9CQUE3QixDQUExQjtBQUNBLFFBQUlnQixzQkFBc0JOLFNBQTFCLEVBQXFDO0FBQ25DSCxXQUFLQyxNQUFMLENBQVlHLEdBQVosQ0FBaUIsR0FBRVgsU0FBVSxjQUE3QixFQUE0Q2dCLGlCQUE1QztBQUNBVCxXQUFLQyxNQUFMLENBQVlJLEtBQVosQ0FBbUIsR0FBRVosU0FBVSxvQkFBL0I7QUFDRDtBQUNGOztBQUVEaUIsZUFBYTtBQUNYLFNBQUtkLFVBQUwsQ0FBZ0JlLE9BQWhCO0FBQ0Q7O0FBRURDLGNBQVksQ0FDWDtBQXhDdUI7O0FBMkMxQkMsT0FBT0MsT0FBUCxHQUFpQixJQUFJcEIsbUJBQUosRUFBakIiLCJmaWxlIjoibWFya2Rvd24tdGFibGUtZWRpdG9yLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9ob3RtYW4vLmF0b20vcGFja2FnZXMvbWFya2Rvd24tdGFibGUtZWRpdG9yL2xpYiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb250cm9sbGVyIGZyb20gXCIuL2NvbnRyb2xsZXIuanNcIjtcblxuY29uc3QgTkFNRVNQQUNFID0gXCJtYXJrZG93bi10YWJsZS1lZGl0b3JcIjtcblxuY2xhc3MgTWFya2Rvd25UYWJsZUVkaXRvciB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuY29udHJvbGxlciA9IG51bGw7XG4gIH1cblxuICBhY3RpdmF0ZSgpIHtcbiAgICB0aGlzLmNvbnRyb2xsZXIgPSBuZXcgQ29udHJvbGxlcigpO1xuICAgIC8vIG1pZ3JhdGUgb2xkIGNvbmZpZ3VyYXRpb25zXG4gICAgY29uc3QgZ3JhbW1hcnMgPSBhdG9tLmNvbmZpZy5nZXQoYCR7TkFNRVNQQUNFfS5ncmFtbWFyc2ApO1xuICAgIGlmIChncmFtbWFycyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBhdG9tLmNvbmZpZy5zZXQoYCR7TkFNRVNQQUNFfS5zY29wZXNgLCBncmFtbWFycyk7XG4gICAgICBhdG9tLmNvbmZpZy51bnNldChgJHtOQU1FU1BBQ0V9LmdyYW1tYXJzYCk7XG4gICAgfVxuICAgIGNvbnN0IG1pbmltdW1Db250ZW50V2lkdGggPSBhdG9tLmNvbmZpZy5nZXQoYCR7TkFNRVNQQUNFfS5taW5pbXVtQ29udGVudFdpZHRoYCk7XG4gICAgaWYgKG1pbmltdW1Db250ZW50V2lkdGggIT09IHVuZGVmaW5lZCkge1xuICAgICAgYXRvbS5jb25maWcuc2V0KGAke05BTUVTUEFDRX0ubWluRGVsaW1pdGVyV2lkdGhgLCBtaW5pbXVtQ29udGVudFdpZHRoKTtcbiAgICAgIGF0b20uY29uZmlnLnVuc2V0KGAke05BTUVTUEFDRX0ubWluaW11bUNvbnRlbnRXaWR0aGApO1xuICAgIH1cbiAgICBjb25zdCBlYXdBbWJpZ3VvdXNBc1dpZGUgPSBhdG9tLmNvbmZpZy5nZXQoYCR7TkFNRVNQQUNFfS5lYXdBbWJpZ3VvdXNBc1dpZGVgKTtcbiAgICBpZiAoZWF3QW1iaWd1b3VzQXNXaWRlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGF0b20uY29uZmlnLnNldChgJHtOQU1FU1BBQ0V9LmFtYmlndW91c0FzV2lkZWAsIGVhd0FtYmlndW91c0FzV2lkZSk7XG4gICAgICBhdG9tLmNvbmZpZy51bnNldChgJHtOQU1FU1BBQ0V9LmVhd0FtYmlndW91c0FzV2lkZWApO1xuICAgIH1cbiAgICBjb25zdCBhbHdheXNXaWRlQ2hhcnMgPSBhdG9tLmNvbmZpZy5nZXQoYCR7TkFNRVNQQUNFfS5hbHdheXNXaWRlQ2hhcnNgKTtcbiAgICBpZiAoYWx3YXlzV2lkZUNoYXJzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGF0b20uY29uZmlnLnNldChgJHtOQU1FU1BBQ0V9LndpZGVDaGFyc2AsIGFsd2F5c1dpZGVDaGFycyk7XG4gICAgICBhdG9tLmNvbmZpZy51bnNldChgJHtOQU1FU1BBQ0V9LmFsd2F5c1dpZGVDaGFyc2ApO1xuICAgIH1cbiAgICBjb25zdCBhbHdheXNOYXJyb3dDaGFycyA9IGF0b20uY29uZmlnLmdldChgJHtOQU1FU1BBQ0V9LmFsd2F5c05hcnJvd0NoYXJzYCk7XG4gICAgaWYgKGFsd2F5c05hcnJvd0NoYXJzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGF0b20uY29uZmlnLnNldChgJHtOQU1FU1BBQ0V9Lm5hcnJvd0NoYXJzYCwgYWx3YXlzTmFycm93Q2hhcnMpO1xuICAgICAgYXRvbS5jb25maWcudW5zZXQoYCR7TkFNRVNQQUNFfS5hbHdheXNOYXJyb3dDaGFyc2ApO1xuICAgIH1cbiAgfVxuXG4gIGRlYWN0aXZhdGUoKSB7XG4gICAgdGhpcy5jb250cm9sbGVyLmRlc3Ryb3koKTtcbiAgfVxuXG4gIHNlcmlhbGl6ZSgpIHtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBNYXJrZG93blRhYmxlRWRpdG9yKCk7XG4iXX0=